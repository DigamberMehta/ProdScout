<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Questions</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: linear-gradient(135deg, #e1bee7, #ce93d8, #ba68c8);
        }

        .container {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 100%;
            max-width: 600px;
        }

        h2 {
            color: #6a1b9a;
            margin-bottom: 20px;
            font-size: 24px;
        }

        p {
            font-size: 18px;
            color: #4a148c;
            margin-bottom: 10px;
        }

        input[type="text"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 2px solid #ba68c8;
            border-radius: 5px;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s;
        }

        input[type="text"]:focus {
            border-color: #6a1b9a;
        }

        button {
            padding: 12px 20px;
            background-color: #6a1b9a;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            margin-top: 20px;
        }

        button:hover {
            background-color: #4a148c;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Answer the following questions about your product:</h2>
        <div id="question-container"></div>
        <button id="next-btn" style="display:none;">Next Question</button>
        <div id="submit-container" style="display:none;">
            <button id="submit-btn">Submit Answers</button>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const questionContainer = document.getElementById('question-container');
            const nextBtn = document.getElementById('next-btn');
            const submitContainer = document.getElementById('submit-container');
            const submitBtn = document.getElementById('submit-btn');
            let answers = {};
            let currentQuestionIndex = 0;

            // Get the product name from the URL query parameter
            const urlParams = new URLSearchParams(window.location.search);
            const productName = urlParams.get('productName');

            if (!productName) {
                questionContainer.innerHTML = '<p>Error: Product name not provided!</p>';
                return;
            }

            // Fetch the questions from the server with the productName
            const response = await fetch('/questions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productName }), // Use the dynamic product name
            });

            const { questions } = await response.json();

            // Function to display a question
            function displayQuestion(index) {
                questionContainer.innerHTML = `
                    <p>${questions[index]}</p>
                    <input type="text" id="answer-input" placeholder="Your answer" required>
                `;
                nextBtn.style.display = 'block';  // Show the next button
            }

            // Display the first question initially
            displayQuestion(currentQuestionIndex);

            // Move to the next question when Next button is clicked
            nextBtn.addEventListener('click', () => {
                const answerInput = document.getElementById('answer-input').value;
                if (!answerInput) {
                    alert('Please provide an answer before proceeding.');
                    return;
                }
                // Save the current answer
                answers[questions[currentQuestionIndex]] = answerInput;
                currentQuestionIndex++;

                // If we have more questions, show the next one
                if (currentQuestionIndex < questions.length) {
                    displayQuestion(currentQuestionIndex);
                } else {
                    // All questions have been answered, show the submit button
                    nextBtn.style.display = 'none';
                    submitContainer.style.display = 'block';
                }
            });

            // Submit the answers when Submit button is clicked
            submitBtn.addEventListener('click', async () => {
                // Post the answers to the /recommendations endpoint
                const recommendationResponse = await fetch('/recommendations', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ answers }),
                });

                // Wait for the response containing the recommendations
                const { recommendations } = await recommendationResponse.json();

                // Redirect to the recommendations page after receiving the recommendations
                window.location.href = `/recommendations?recommendations=${encodeURIComponent(JSON.stringify(recommendations))}`;
            });
        });
    </script>
</body>
</html>
